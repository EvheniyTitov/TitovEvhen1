       
    Лабораторна робота №10
    
    з дисципліни «Алгоритмізація та програмування»
    
    
   Тема: "Створення і обробка структур даних мовою С ++"    	 
                             Виконав студент гр. 319 Тітов Євген
                          		       

		МЕТА РОБОТИ
 Вивчити теоретичний матеріал з основ представлення структур (записів)
мовою С ++, а також їх передачі в функції, і реалізувати декларування і обробку
структур мовою C ++ в середовищі Visual Studio.
    
	  ПОСТАНОВКА ЗАДАЧІ
    
Завдання 1. Вирішити задачу зі структурами даних. 
Завдання 2. 
A. Описати структуру, яка містить всі вхідні і всі вихідні дані задачі.
B. Визначити функцію (*метод), що реалізує обробку структури
відповідно до задачі.
C. Визначити функцію (*метод), що перевіряє на коректність і заповнює
відповідні поля вхідних даних стуктури
D. Викликати функції (*методи) з пунктів С, B після оголошення змінної
(об’єкту) структури.
E. Вивести значення полів вихідних даних.
Завдання 3. Рішення всіх трьох задач реалізувати в одному консольному
додатку, *структурувати на модулі.

		ВИКОНАННЯ РОБОТИ
    
    Завдання 1. 
    Вхідні дані (ім’я, опис, тип, обмеження):
   список імен змінних з описом, типами даних, та діапазонами допустимих значень
    Вихідні дані (ім’я, опис, тип):    

    Лістинг коду вирішення задачі 

код зі збереженням відступів, коментарями

Param75 таб 1
#include <iostream>

struct TTime {
    int hour;
    int minute;
    int second;
};

// Процедура для зміни часу на -1 годину
// Якщо час неправильний, то нічого не змінюється
void PrevHour(TTime& time) {
    if (time.hour > 0) {
        time.hour -= 1;
    }
}

int main() {
    TTime time1 = {12, 30, 0};
    TTime time2 = {9, 45, 0};
    TTime time3 = {0, 0, 0};
    TTime time4 = {23, 59, 59};
    TTime time5 = {8, 0, 0};

    // Застосування процедури PrevHour до кожного моменту часу
    PrevHour(time1);
    PrevHour(time2);
    PrevHour(time3);
    PrevHour(time4);
    PrevHour(time5);

    // Виведення оновлених значень часу на екран
    std::cout << "Time 1: " << time1.hour << ":" << time1.minute << ":" << time1.second << std::endl;
    std::cout << "Time 2: " << time2.hour << ":" << time2.minute << ":" << time2.second << std::endl;
    std::cout << "Time 3: " << time3.hour << ":" << time3.minute << ":" << time3.second << std::endl;
    std::cout << "Time 4: " << time4.hour << ":" << time4.minute << ":" << time4.second << std::endl;
    std::cout << "Time 5: " << time5.hour << ":" << time5.minute << ":" << time5.second << std::endl;

    return 0;
}


 
    Завдання 2. 
    Begin 27 таб.2
    Вхідні дані (ім’я, опис, тип, обмеження): 
    список імен змінних з описом, типами даних, та діапазонами допустимих значень
    Вихідні дані (ім’я, опис, тип): 


    Лістинг коду вирішення задачі 

код зі збереженням відступів, коментарями   
Begin 27

#include <stdio.h>

int main(void)
{
    float A;
    printf("A: ");
    scanf("%f", &A);

    float tempA;

    // Обчислюємо квадрат числа A
    tempA = A * A;
    printf("A^2: %f\n", tempA);

    // Обчислюємо четверту степінь числа A
    tempA = tempA * tempA;
    printf("A^4: %f\n", tempA);

    // Обчислюємо восьму степінь числа A
    tempA = tempA * tempA;
    printf("A^8: %f\n", tempA);

    return 0;
}
    Завдання 3. 
    Boolean 32 таб.3
    Вхідні дані (ім’я, опис, тип, обмеження): 
    список імен змінних з описом, типами даних, та діапазонами допустимих значень
    Вихідні дані (ім’я, опис, тип): 


    Лістинг коду вирішення задачі 

код зі збереженням відступів, коментарями   
Boolean 32

#include <iostream>
using namespace std;

int main() {
    setlocale(LC_ALL, "Ukrainian");

    int a, b, c;
    cout << "A: ";
    cin >> a;
    cout << "B: ";
    cin >> b;
    cout << "C: ";
    cin >> c;

    // Перевіряємо, чи виконується умова Піфагорового трикутника
    if ((a * a == b * b + c * c) || (b * b == a * a + c * c) || (c * c == a * a + b * b)) {
        cout << "Істина";
    }
    else {
        cout << "Неправда";
    }

    return 0;
}



 
		ВИСНОВКИ
     
Було вивчено теоретичний матеріал з основ представлення структур (записів)
мовою С ++, а також їх передачі в функції, і реалізування декларування і обробку
структур мовою C ++ в середовищі Visual Studio.
Закріплено на практиці тему: "Створення і обробка структур даних мовою С ++"   
Відпрацьовано в коді програми представлення структур
мовою С ++, а також їх передачі в функції, і реалізування декларування і обробку
структур мовою C ++
Отримано навички з основ роботи зі структурами на мові С ++
     


   

