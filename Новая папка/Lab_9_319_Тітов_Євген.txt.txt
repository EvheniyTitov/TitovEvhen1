       
    Лабораторна робота №9
    
    з дисципліни «Алгоритмізація та програмування»
    
    
   Тема: "Робота з рядками на С ++"    	 
                             Виконав студент гр. 319 Тітов Євген
                          		       

		МЕТА РОБОТИ
  Вивчити теоретичний матеріал з основ роботи з низькорівневими рядками
на С++ і документацію до класу string, а також алгоритми пошуку в рядку, а
також реалізувати обробку рядків на C++ в середовищі Visual Studio.
    
	  ПОСТАНОВКА ЗАДАЧІ
    
Завдання 1.
A. Вивчити по документації метод стандартного класу string відповідно до
варіанту (див. табл.1).
B. Визначити функцію, що виконує ті ж дії, що і вивчений метод класу
string. Вихідний рядок передати першим параметром (масив символів).
Для реалізації методу не використовувати функції обробки рядків зі
стандартних бібліотек.
C. Викликати свій метод і метод string аналогічно прикладам коду,
наведеними в дод.А. *Перед викликом ввести з консолі один рядок і
зберегти в масиві символів і змінній типу string.
Завдання 2.
A.Описати функцію, що обробляє рядок відповідно до завдання з табл.2. Для
реалізації можна використовувати функції обробки рядків зі стандартних
бібліотек
B.Описати функцію, яка перевіряє, чи задовольняє рядок умовам завдання.
C.* Створити вихідний текстовий файл, що містить не менше 10 різних рядків.
D.Використовуючи функції 2.А і 2.В, обробити рядок / * текстовий файл
рядок за рядком. Додаткові дані ввести з консолі.
E. Отриманий результат записати у вихідний файл.

		ВИКОНАННЯ РОБОТИ
    
    Завдання 1. 
    Вхідні дані (ім’я, опис, тип, обмеження):
   список імен змінних з описом, типами даних, та діапазонами допустимих значень
    Вихідні дані (ім’я, опис, тип):    

    Лістинг коду вирішення задачі 

код зі збереженням відступів, коментарями

Варіант 32 таб 1
#include <iostream>

size_t find_first_of(const char* str, const char* chars, size_t pos = 0) {
    size_t strLength = 0;
    while (str[strLength] != '\0') {
        strLength++;
    }

    size_t charsLength = 0;
    while (chars[charsLength] != '\0') {
        charsLength++;
    }

    for (size_t i = pos; i < strLength; i++) {
        for (size_t j = 0; j < charsLength; j++) {
            if (str[i] == chars[j]) {
                return i;  // Знайдено співпадіння, повертаємо позицію
            }
        }
    }

    return std::string::npos;  // Не знайдено, повертаємо значення string::npos
}

int main() {
    const int MAX_SIZE = 100;
    char str[MAX_SIZE];
    std::string searchString;

    std::cout << "Введіть рядок: ";
    std::cin.getline(str, MAX_SIZE);  // Вводимо рядок

    std::cout << "Введіть рядок для пошуку: ";
    std::cin >> searchString;  // Вводимо рядок для пошуку

    size_t result = find_first_of(str, searchString.c_str());  // Виклик функції пошуку

    if (result != std::string::npos) {
        std::cout << "Знайдено на позиції " << result << std::endl;  // Виводимо позицію
    } else {
        std::cout << "Не знайдено" << std::endl;  // Повідомляємо, що не знайдено
    }

    return 0;
}

 
    Завдання 2. 
    String 24 таб.2
    Вхідні дані (ім’я, опис, тип, обмеження): 
    список імен змінних з описом, типами даних, та діапазонами допустимих значень
    Вихідні дані (ім’я, опис, тип): 


    Лістинг коду вирішення задачі 

код зі збереженням відступів, коментарями   
String 24

#include <iostream>
#include <cmath>

int binaryToDecimal(const std::string& binary) {
    int decimal = 0;
    int power = binary.length() - 1;  // Степінь, в яку потрібно піднести 2

    for (char digit : binary) {
        if (digit == '1') {
            decimal += std::pow(2, power);  // Додати поточне значення до десяткового числа
        }
        power--;  // Зменшити степінь на 1
    }

    return decimal;
}

int main() {
    std::string binary;
    std::cout << "Введіть двійкове число: ";
    std::cin >> binary;

    int decimal = binaryToDecimal(binary);

    std::cout << "Десяткове число: " << decimal << std::endl;

    return 0;
}     

 
		ВИСНОВКИ
     
Було вивчено теоретичний матеріал з основ роботи з низькорівневими рядками
на С++ і документацію до класу string, а також алгоритми пошуку в рядку, а
також реалізувати обробку рядків на C++ в середовищі Visual Studio.
Закріплено на практиці тему: "Робота з рядками на С ++"   
Відпрацьовано в коді програми введення з консолі, обробку і виведення в консоль рядків на мові C ++
Отримано навички з основ роботи з рядками на мові С ++
     


   

